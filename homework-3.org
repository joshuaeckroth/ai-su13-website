#+SETUPFILE: setup.org
#+TITLE: Homework 3

* Task 1 (10 pts)

Build truth tables for the following formulas:

1. $\neg (A \wedge C) \vee B$

2. $(A \rightarrow \neg B) \vee (B \leftrightarrow C)$

* Task 2 (10 pts)

Find variable assignments that satisfy the following
formulas, or state that no such assignment exists:

1. $\neg (A \vee B) \wedge (\neg A \wedge B \wedge \neg C)$

2. $C \leftrightarrow (\neg C \vee \neg A)$

* Task 3 (10 pts)

Express the following statements in propositional logic:

1. $B$ or $C$ is true whenever $A$ is true.

2. $B$ is known to be true when $A$ is true.

3. At most one of $R$, $S$, and $T$ can be true.

4. The grass is wet if either it rained or the sprinkler was
   on. (Create propositional symbols, and give their
   definitions.)

* Task 4 (20 pts)

We have a knowledge base that contains:

- $(R \rightarrow S) \wedge Q$

- $(J \wedge Q) \rightarrow P$

- $Q \rightarrow Z$

- $P \rightarrow \neg Q$

- $(R \rightarrow S) \rightarrow (\neg H \rightarrow J)$

Derive each of the following using inference rules for
propositional logic:

1. $Z$

2. $\neg P$

3. $\neg (J \wedge Q)$

4. $\neg J$

5. $H$

* Task 5 (10 pts)

Rewrite the following statements in first-order logic,
stating definitions for the predicates you use. (Note, some of
these are hard or impossible; make an attempt...)

1. James is a dolphin.

2. Dolphins are mammals.

3. Mammals have hair and three middle ear bones.

4. Not all dolphins live in the ocean.

5. Some mammals have sweat glands and specialized teeth.

6. Vignesh stopped by his house before going to the party.

7. The usual (or "default") result of firing a loaded gun at a person
   is that the person dies.

8. This sentence is false.

* Task 6 (20 pts)

Assume we have the following Prolog database:

#+BEGIN_SRC prolog
parent(tom, liz).
parent(tim, bob).
parent(bob, ann).
parent(bob, pat).
parent(pat, jim).

female(pam).
male(tim).
male(tom).
male(bob).
female(liz).
female(pat).
female(ann).
male(jim).

mother(X) :- parent(X, _), female(X).
#+END_SRC

1. Write Prolog queries for the following questions:

   1. Who is Ann's parent?

   2. Is Jim Bob's child?

   3. Who is Jim's grandparent?

2. Write a rule that describes a child, so that ~child(X, Y)~ means
   ~X~ is the child of ~Y~. Don't allow a person to be his or her
   own child.

4. Define an ancestor rule. An ancestor is a parent of a person, a
   grandparent, a great-grandparent, etc. Naturally, this rule is
   recursive (like the ~member~ predicate in the notes).

5. Define a descendant rule. This rule is the opposite of the ancestor
   rule. A child is a descendant; so is a grandchild, great-grandchild,
   etc.

* Task 7 (10 pts)

Do the following unify, and if so, what are values for the variables
(one set of values for each question), if any variables are involved,
that make the unification work?

- ~parent(tom, liz)~ and ~parent(tom, X)~

- ~parent(X, liz)~ and ~parent(liz, X)~

- ~parent(X, Y)~ and ~parent(Y, X)~

- ~head(X, [a, b, c])~ and ~head(b, [a, b, c])~

- ~head(foo(Y), X)~ and ~head(foo(Z), [foo(w)])~

- ~foo(bar(a, b), baz(c))~ and ~foo(bar(X), baz(Y))~

* Task 8 (10 pts)

Draw a resolution tree for ~mother(X)~. Note that there is a
particular order by which Prolog creates subgoals (that is, the order
that facts/rules are written in the knowledge base). You only need to
show the tree until the first time the predicate is proved.

#+INCLUDE: footer.org
